# This file is generated by dune, edit dune-project instead
opam-version: "2.0"
synopsis: "Syntax extension for building values of monoids"
description: """
This is a syntax extension for OCaml to make building values of
monoids easier. Assumes the existence of two operations in scope for
some type `t`:

````ocaml
empty : t
(^^)  : t -> t -> t
````

`ppx-monoid`, triggered by the PPX extension point `monoid`,
reinterprets the semicolon `;` to mean the monoid operation `^^` and
the unit expression `()` to mean `empty`."""
maintainer: ["bob.atkey@gmail.com"]
authors: ["Robert Atkey"]
license: "MIT"
homepage: "https://github.com/bobatkey/ppx-monoid"
bug-reports: "https://github.com/bobatkey/ppx-monoid/issues"
depends: [
  "dune" {>= "2.0"}
  "ocaml" {>= "4.04.1"}
  "ppxlib" {>= "0.27.0"}
  "ounit2" {with-test}
]
build: [
  ["dune" "subst"] {pinned}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
]
dev-repo: "git+https://github.com/bobatkey/ppx-monoid.git"
url {
  src: "https://github.com/bobatkey/ppx-monoid/archive/0.3.3.tar.gz"
  checksum: [
    "md5=9a30b489abf44fd145117cd5f1907f4d"
    "sha512=6d4057513604487f1376e6e118e773c51c6a76e2b1bfbe2254ee0883e64df6168634b1ff6f31609f3d5cac5f64279df23b3c1d4c4acb7ce609d21337baffc797"
  ]
}
